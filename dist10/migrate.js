"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const application_1 = require("./application");
async function migrate(args) {
    const existingSchema = args.includes('--rebuild') ? 'drop' : 'alter';
    console.log('Migrating schemas (%s existing schema)', existingSchema);
    const app = new application_1.KerzachiApplication();
    await app.boot();
    await app.migrateSchema({ existingSchema });
    // Connectors usually keep a pool of opened connections,
    // this keeps the process running even after all work is done.
    // We need to exit explicitly.
    process.exit(0);
}
exports.migrate = migrate;
migrate(process.argv).catch(err => {
    console.error('Cannot migrate database schema', err);
    process.exit(1);
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWlncmF0ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9taWdyYXRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsK0NBQWtEO0FBRTNDLEtBQUssVUFBVSxPQUFPLENBQUMsSUFBYztJQUMxQyxNQUFNLGNBQWMsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQztJQUNyRSxPQUFPLENBQUMsR0FBRyxDQUFDLHdDQUF3QyxFQUFFLGNBQWMsQ0FBQyxDQUFDO0lBRXRFLE1BQU0sR0FBRyxHQUFHLElBQUksaUNBQW1CLEVBQUUsQ0FBQztJQUN0QyxNQUFNLEdBQUcsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNqQixNQUFNLEdBQUcsQ0FBQyxhQUFhLENBQUMsRUFBQyxjQUFjLEVBQUMsQ0FBQyxDQUFDO0lBRTFDLHdEQUF3RDtJQUN4RCw4REFBOEQ7SUFDOUQsOEJBQThCO0lBQzlCLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDbEIsQ0FBQztBQVpELDBCQVlDO0FBRUQsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLEVBQUU7SUFDaEMsT0FBTyxDQUFDLEtBQUssQ0FBQyxnQ0FBZ0MsRUFBRSxHQUFHLENBQUMsQ0FBQztJQUNyRCxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2xCLENBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtLZXJ6YWNoaUFwcGxpY2F0aW9ufSBmcm9tICcuL2FwcGxpY2F0aW9uJztcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1pZ3JhdGUoYXJnczogc3RyaW5nW10pIHtcbiAgY29uc3QgZXhpc3RpbmdTY2hlbWEgPSBhcmdzLmluY2x1ZGVzKCctLXJlYnVpbGQnKSA/ICdkcm9wJyA6ICdhbHRlcic7XG4gIGNvbnNvbGUubG9nKCdNaWdyYXRpbmcgc2NoZW1hcyAoJXMgZXhpc3Rpbmcgc2NoZW1hKScsIGV4aXN0aW5nU2NoZW1hKTtcblxuICBjb25zdCBhcHAgPSBuZXcgS2VyemFjaGlBcHBsaWNhdGlvbigpO1xuICBhd2FpdCBhcHAuYm9vdCgpO1xuICBhd2FpdCBhcHAubWlncmF0ZVNjaGVtYSh7ZXhpc3RpbmdTY2hlbWF9KTtcblxuICAvLyBDb25uZWN0b3JzIHVzdWFsbHkga2VlcCBhIHBvb2wgb2Ygb3BlbmVkIGNvbm5lY3Rpb25zLFxuICAvLyB0aGlzIGtlZXBzIHRoZSBwcm9jZXNzIHJ1bm5pbmcgZXZlbiBhZnRlciBhbGwgd29yayBpcyBkb25lLlxuICAvLyBXZSBuZWVkIHRvIGV4aXQgZXhwbGljaXRseS5cbiAgcHJvY2Vzcy5leGl0KDApO1xufVxuXG5taWdyYXRlKHByb2Nlc3MuYXJndikuY2F0Y2goZXJyID0+IHtcbiAgY29uc29sZS5lcnJvcignQ2Fubm90IG1pZ3JhdGUgZGF0YWJhc2Ugc2NoZW1hJywgZXJyKTtcbiAgcHJvY2Vzcy5leGl0KDEpO1xufSk7XG4iXX0=